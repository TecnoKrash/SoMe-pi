
<!include-things>
        // Manually setting up the links for default cowtchoox ressources to make it work on the web
        <script defer="defer" src="web/cowtchoox-res/js/main.js"></script>
        <link rel="stylesheet" href="web/cowtchoox-res/default/util.css"/>
        <link rel="stylesheet" href="web/cowtchoox-res/default/default.css"/>
        <link rel="stylesheet" href="web/cowtchoox-res/default/critical.css"/>

        // Import Three.js
        <script type="importmap">
            {
                "imports": {
                    "three": "https:\/\/cdn.jsdelivr.net/npm/three@0.167.0/build/three.module.js",
                    "three/addons/": "https:\/\/cdn.jsdelivr.net/npm/three@0.167.0/examples/jsm/"
                }
            }
        </script>

        // Links for the website
        <script defer="defer" type="module" src="web/main.js"></script>
        <link rel="stylesheet" href="web/base.css"/>
        <link rel="stylesheet" href="web/main.css"/>
</include-things>

<!hidden :inner :title :id>
    <div class="top">
        <:title/>
    </div>

    <:inner/>

    <!evaluate>
        let el = document.querySelector("hidden#<:id/>");
        let top = document.querySelector("hidden#<:id/> > .top");
        top.addEventListener("click", ev => {
            el.classList.toggle("expanded");
        });
        ""
    </evaluate>
</hidden>

<!def :inner :title>
    <span class="bold">Definition.</span> (<:title/>)
    <span class="space"></span>
    <:inner/>
</def>

<!prop :inner :title>
    <span class="bold">Proposition.</span> (<:title/>)
    <span class="space"></span>
    <:inner/>
</prop>

<?norm :inner>
    ?abs{?abs{<:inner/>}}
</norm>

<!pagelink :id :inner>
    <:inner/>

    <!evaluate>
        function ScrollToElement(el) {
            let rect = el.getBoundingClientRect();
            let height = rect.bottom - rect.top;
            let width = rect.right - rect.left;

            document.body.scrollTo(
                document.body.scrollLeft + rect.left + width / 2 - window.innerWidth / 2, 
                document.body.scrollTop + rect.top + height / 2 - window.innerHeight / 2
            );
        }

        this.parentElement.addEventListener("click", () => {
            let id = this.parentElement.getAttribute(":id");
            ScrollToElement(document.getElementById(id));
        });

        ""
    </evaluate>
</pagelink>


// HACK
// The arguments are completely useless but if you remove them, cowtchoox crashes because of some bug
<!article-summary :_1 :_2>
    <aside>
        <div id="summary-title">Summary</div>
        <!summary :root-selector="main" :tags="h2"/>
    </aside>
</article-summary>


// Displays a summary
// root-selector: the element into which the headers are located (CSS selector)
// tags: headers to be included (CSS selector)
<!summary :root-selector :tags>
    <!evaluate>
        let root = document.querySelector("<:root-selector/>");

        let headers = root.querySelectorAll("<:tags/>");

        let i = 0;
        for (let t of headers) {
            let el = document.createElement("a");
            el.innerHTML = t.innerHTML;
            el.classList.add("summary-element-" + t.tagName);
            
            if (t.id == "") {
                t.id = "auto-header-id-" + i.toString();
            }

            el.setAttribute("href", "#" + t.id);

            this.parentElement.appendChild(el);

            i++;
        }

        ""
    </evaluate>
</summary>


